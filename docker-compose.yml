services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    expose:
      - "6379"
    volumes:
      - redis_data:/data

  backend:
    build: ./server
    container_name: backend
    restart: always
    env_file: ./server/.env
    expose:
      - "5000"
    depends_on:
      - redis
    # The healthcheck tells Docker to check if the backend is ready.
    # It attempts to connect to the backend's internal port.
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --timeout=1 http://localhost:5000/api/user/test || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Background worker container for processing jobs
  worker:
    build: ./server
    container_name: worker
    restart: always
    env_file: ./server/.env
    command: ["node", "jobs/index.js"]
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt/live/shophub.thebigphotocontest.com/fullchain.pem:/etc/ssl/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/shophub.thebigphotocontest.com/privkey.pem:/etc/ssl/private/privkey.pem:ro
    # Nginx now depends on the frontend and backend being healthy.
    # This prevents the 502 error by waiting for them to be fully ready.
    depends_on:
      backend:
        condition: service_healthy

volumes:
  redis_data:
